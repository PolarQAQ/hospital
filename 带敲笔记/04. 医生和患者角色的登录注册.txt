登录功能
页面：

<el-form-item>
  <el-select v-model="form.role" placeholder="请选择角色" style="width: 100%;">
    <el-option label="管理员" value="ADMIN"></el-option>
    <el-option label="医生" value="DOCTOR"></el-option>
    <el-option label="患者" value="USER"></el-option>
  </el-select>
</el-form-item>
后台：
image.png

public Account login(Account account) {
    Account dbDoctor = doctorMapper.selectByUsername(account.getUsername());
    if (ObjectUtil.isNull(dbDoctor)) {
        throw new CustomException(ResultCodeEnum.USER_NOT_EXIST_ERROR);
    }
    if (!account.getPassword().equals(dbDoctor.getPassword())) {
        throw new CustomException(ResultCodeEnum.USER_ACCOUNT_ERROR);
    }
    // 生成token
    String tokenData = dbDoctor.getId() + "-" + RoleEnum.DOCTOR.name();
    String token = TokenUtils.createToken(tokenData, dbDoctor.getPassword());
    dbDoctor.setToken(token);
    return dbDoctor;
}
public Account login(Account account) {
    Account dbUser = userMapper.selectByUsername(account.getUsername());
    if (ObjectUtil.isNull(dbUser)) {
        throw new CustomException(ResultCodeEnum.USER_NOT_EXIST_ERROR);
    }
    if (!account.getPassword().equals(dbUser.getPassword())) {
        throw new CustomException(ResultCodeEnum.USER_ACCOUNT_ERROR);
    }
    // 生成token
    String tokenData = dbUser.getId() + "-" + RoleEnum.USER.name();
    String token = TokenUtils.createToken(tokenData, dbUser.getPassword());
    dbUser.setToken(token);
    return dbUser;
}
JWT：
image.png
image.png

注册
form: { role: 'USER' },
image.png
public void register(Account account) {
    User user = new User();
    BeanUtils.copyProperties(account, user);
    add(user);
}