富文本编辑器wangeditor：https://www.wangeditor.com/v4

第一步：安装和引入
进入到vue目录下：

cd vue
npm i wangeditor --save
在script里面引入：

import E from 'wangeditor'
初始化文件上传的接口
富文本编辑器图片上传的接口：

/**
 * wang-editor编辑器文件上传接口
 */
@PostMapping("/wang/upload")
public Map<String, Object> wangEditorUpload(MultipartFile file) {
    String flag = System.currentTimeMillis() + "";
    String fileName = file.getOriginalFilename();
    try {
        // 文件存储形式：时间戳-文件名
        FileUtil.writeBytes(file.getBytes(), filePath + flag + "-" + fileName);
        System.out.println(fileName + "--上传成功");
        Thread.sleep(1L);
    } catch (Exception e) {
        System.err.println(fileName + "--文件上传失败");
    }
    String http = "http://" + ip + ":" + port + "/files/";
    Map<String, Object> resMap = new HashMap<>();
    // wangEditor上传图片成功后， 需要返回的参数
    resMap.put("errno", 0);
    resMap.put("data", CollUtil.newArrayList(Dict.create().set("url", http + flag + "-" + fileName)));
    return resMap;
}
初始化富文本编辑器
需要先指定一个位置让它来初始化：

<el-form-item prop="medicalRecord" label="医嘱病历">
  <div id="editor"></div>
</el-form-item>
在script里面去初始化这个富文本编辑器就可以了。

let editor
function initWangEditor(content) {	setTimeout(() => {
  if (!editor) {
    editor = new E('#editor')
    editor.config.placeholder = '请输入内容'
    editor.config.uploadFileName = 'file'
    editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload'
    editor.create()
  }
  editor.txt.html(content)
}, 0)
}
在具体的时候去初始化它
填写医嘱病历：

initWangEditor(this.form.medicalRecord || '')
编辑完之后保存内容
保存：

this.form.description = editor.txt.html()
渲染（管理端表格）
表格上面加一个点击查看的按钮：

<el-table-column prop="medicalRecord" label="医嘱病历">
  <template v-slot="scope">
    <el-button type="primary" size="mini" @click="viewEditor(scope.row.medicalRecord)">查看病历</el-button>
  </template>
</el-table-column>
实现viewEditor函数

viewEditor(content) {
  this.viewContent = content
  this.editorVisible = true
},
对话框：

<el-dialog title="医嘱病历" :visible.sync="editorVisible" width="50%" :close-on-click-modal="false" destroy-on-close>
  <div v-html="this.viewContent" class="w-e-text"></div>
</el-dialog>
在data里初始化两个变量：

data() {
    return {
      viewContent: null,
      editorVisible: false,
    }
  },
wangEditor有个小坑：
在对话框里面可以加上一个close回掉，取消的按钮也加一个cancel

@close="cancel"
cancel函数：

cancel() {
  this.fromVisible = false
  location.href = '/department'
},